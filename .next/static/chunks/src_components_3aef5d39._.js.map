{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["/**\n * @fileoverview Componente de UI \"Card\" (Tarjeta).\n * Proporciona un contenedor estilizado para agrupar contenido relacionado,\n * con secciones para encabezado, contenido y pie de página.\n *\n * @see https://ui.shadcn.com/docs/components/card\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Componente principal de la tarjeta, actúa como contenedor.\n */\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n/**\n * Sección de encabezado de la tarjeta.\n */\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n/**\n * Componente para el título dentro de CardHeader.\n */\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n/**\n * Componente para la descripción dentro de CardHeader.\n */\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n/**\n * Sección de contenido principal de la tarjeta.\n */\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n/**\n * Sección de pie de página de la tarjeta.\n */\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;;;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB;;CAEC,GACD,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB;;CAEC,GACD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["/**\n * @fileoverview Componente de UI \"Label\" (Etiqueta).\n * Muestra una etiqueta para un campo de formulario.\n *\n * @see https://ui.shadcn.com/docs/components/label\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\n/**\n * Componente Label que se asocia con un campo de entrada.\n */\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAGD;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF;;CAEC,GACD,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["/**\n * @fileoverview Componente de UI \"Textarea\".\n * Proporciona un campo de entrada de texto de varias líneas.\n *\n * @see https://ui.shadcn.com/docs/components/textarea\n */\nimport * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\n/**\n * Componente Textarea para entrada de texto largo.\n */\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["/**\n * @fileoverview Componente de UI \"Tabs\" (Pestañas).\n * Un conjunto de pestañas que muestran un panel de contenido a la vez.\n *\n * @see https://ui.shadcn.com/docs/components/tabs\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Componente raíz del sistema de pestañas.\n */\nconst Tabs = TabsPrimitive.Root\n\n/**\n * Lista que contiene los disparadores de las pestañas.\n */\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\n/**\n * El botón que activa una pestaña para mostrar su contenido.\n */\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\n/**\n * El panel de contenido asociado a una pestaña.\n */\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;AAGD;AACA;AAEA;AALA;;;;;AAOA;;CAEC,GACD,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B;;CAEC,GACD,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["/**\n * @fileoverview Componente de UI \"Popover\".\n * Muestra contenido enriquecido en una ventana emergente que aparece\n * junto a un elemento disparador.\n *\n * @see https://ui.shadcn.com/docs/components/popover\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Componente raíz del popover.\n */\nconst Popover = PopoverPrimitive.Root\n\n/**\n * Elemento que activa la apertura del popover.\n */\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\n/**\n * Contenedor del contenido del popover.\n */\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;;;AAGD;AACA;AAEA;AALA;;;;;AAOA;;CAEC,GACD,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC;;CAEC,GACD,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C;;CAEC,GACD,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["/**\n * @fileoverview Componente de UI \"Calendar\" (Calendario).\n * Permite a los usuarios seleccionar fechas de un calendario interactivo.\n *\n * @see https://ui.shadcn.com/docs/components/calendar\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\n/**\n * Componente de calendario para selección de fechas.\n * @param {CalendarProps} props - Propiedades del componente DayPicker.\n */\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAID;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA;;;CAGC,GACD,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;KAvDS;AAwDT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/accordion.tsx"],"sourcesContent":["/**\n * @fileoverview Componente de UI \"Accordion\" (Acordeón).\n * Proporciona un componente de acordeón colapsable, permitiendo mostrar\n * y ocultar secciones de contenido. Basado en Radix UI y estilizado con Tailwind CSS.\n *\n * @see https://ui.shadcn.com/docs/components/accordion\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Contenedor principal del acordeón, basado en AccordionPrimitive.Root.\n */\nconst Accordion = AccordionPrimitive.Root\n\n/**\n * Un único elemento dentro del acordeón, que contiene un disparador (trigger) y un contenido.\n */\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\n/**\n * El botón que conmuta el estado (abierto/cerrado) de un AccordionItem.\n */\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\n/**\n * El contenedor del contenido que se muestra cuando un AccordionItem está abierto.\n */\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;;;;AAGD;AACA;AACA;AAEA;AANA;;;;;;AAQA;;CAEC,GACD,MAAM,YAAY,wKAAA,CAAA,OAAuB;AAEzC;;CAEC,GACD,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B;;CAEC,GACD,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,6LAAC,wKAAA,CAAA,UAA0B;YACzB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gIACA;YAED,GAAG,KAAK;;gBAER;8BACD,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW;AAErE;;CAEC,GACD,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,UAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,6LAAC;YAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;;AAIjD,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/slider.tsx"],"sourcesContent":["/**\n * @fileoverview Componente de UI \"Slider\".\n * Un control de entrada que permite al usuario seleccionar un valor\n * de un rango determinado.\n *\n * @see https://ui.shadcn.com/docs/components/slider\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Componente Slider para seleccionar un valor dentro de un rango.\n */\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;AAGD;AACA;AAEA;AALA;;;;;AAOA;;CAEC,GACD,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;0BAET,6LAAC,qKAAA,CAAA,QAAqB;gBAAC,WAAU;0BAC/B,cAAA,6LAAC,qKAAA,CAAA,QAAqB;oBAAC,WAAU;;;;;;;;;;;0BAEnC,6LAAC,qKAAA,CAAA,QAAqB;gBAAC,WAAU;;;;;;;;;;;;;AAGrC,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 623, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["/**\n * @fileoverview Componente de UI \"Select\".\n * Muestra una lista de opciones para que el usuario elija una.\n *\n * @see https://ui.shadcn.com/docs/components/select\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Componente raíz del selector.\n */\nconst Select = SelectPrimitive.Root\n\n/**\n * Agrupa opciones dentro del selector.\n */\nconst SelectGroup = SelectPrimitive.Group\n\n/**\n * Muestra el valor seleccionado.\n */\nconst SelectValue = SelectPrimitive.Value\n\n/**\n * El botón que abre/cierra el selector.\n */\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\n/**\n * Contenedor del contenido del selector (las opciones).\n */\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\n/**\n * Etiqueta para un grupo de opciones.\n */\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\n/**\n * Un elemento individual de opción en el selector.\n */\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\n/**\n * Separador visual entre grupos de opciones.\n */\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 859, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/certificate-editor.tsx"],"sourcesContent":["'use client';\n\nimport { useState, type ChangeEvent, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\nimport Image from 'next/image';\nimport Draggable from 'react-draggable';\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';\nimport { Slider } from '@/components/ui/slider';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { cn } from '@/lib/utils';\nimport { toPng } from 'html-to-image';\nimport { Download } from 'lucide-react';\nimport { jsPDF } from 'jspdf';\n\ntype TextAlign = 'left' | 'center' | 'right';\ntype FontWeight = 'normal' | 'bold' | '300' | '600';\ntype FontFamily = 'body' | 'headline';\n\ninterface StyleProps {\n  fontSize: number;\n  color: string;\n  width: number;\n  textAlign: TextAlign;\n  fontWeight: FontWeight;\n  fontFamily: FontFamily;\n}\n\n/**\n * Componente de cliente para el editor de plantillas de certificados.\n * Permite subir una imagen de fondo, personalizar los textos del certificado\n * y mover los elementos en una vista previa en tiempo real.\n */\nexport function CertificateEditor() {\n  const [backgroundImage, setBackgroundImage] = useState<string | null>(null);\n  const [title, setTitle] = useState('Certificado de Asistencia');\n  const [issuedToText, setIssuedToText] = useState('Otorgado a:');\n  const [description, setDescription] = useState('Por completar exitosamente el taller de Email Marketing Avanzado.');\n  const [dateText, setDateText] = useState('Fecha:');\n  const [signatureText, setSignatureText] = useState('Firma del Organizador');\n  \n  const [elementStyles, setElementStyles] = useState<{ [key: string]: StyleProps }>({\n    title: { fontSize: 48, color: '#000000', width: 80, textAlign: 'center', fontWeight: 'bold', fontFamily: 'headline' },\n    issuedTo: { fontSize: 18, color: '#000000', width: 80, textAlign: 'center', fontWeight: 'normal', fontFamily: 'body' },\n    contactName: { fontSize: 36, color: '#000000', width: 80, textAlign: 'center', fontWeight: '600', fontFamily: 'headline' },\n    description: { fontSize: 16, color: '#000000', width: 80, textAlign: 'center', fontWeight: 'normal', fontFamily: 'body' },\n    signature: { fontSize: 16, color: '#000000', width: 50, textAlign: 'center', fontWeight: '600', fontFamily: 'body' },\n    date: { fontSize: 16, color: '#000000', width: 50, textAlign: 'center', fontWeight: '600', fontFamily: 'body' },\n  });\n\n  const { toast } = useToast();\n\n  const certificateRef = useRef<HTMLDivElement>(null);\n  const titleRef = useRef(null);\n  const issuedToRef = useRef(null);\n  const contactNameRef = useRef(null);\n  const descriptionRef = useRef(null);\n  const signatureRef = useRef(null);\n  const dateRef = useRef(null);\n\n  const handleStyleChange = (element: string, property: keyof StyleProps, value: string | number) => {\n    setElementStyles(prev => ({\n        ...prev,\n        [element]: {\n            ...prev[element],\n            [property]: value,\n        },\n    }));\n  };\n\n  /**\n   * Gestiona el cambio de la imagen de fondo.\n   * Lee el archivo seleccionado, lo convierte a un Data URL y lo establece en el estado\n   * para actualizar la vista previa. Muestra un error si el archivo no es una imagen.\n   * @param e - El evento de cambio del input de archivo.\n   */\n  const handleBackgroundImageChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      if (!file.type.startsWith('image/')) {\n        toast({\n          title: 'Archivo no válido',\n          description: 'Por favor, selecciona un archivo de imagen.',\n          variant: 'destructive',\n        });\n        return;\n      }\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setBackgroundImage(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  /**\n   * Gestiona el guardado de la plantilla de certificado.\n   * Actualmente, muestra una notificación de éxito.\n   */\n  const handleSaveTemplate = () => {\n    toast({\n      title: 'Plantilla Guardada',\n      description: 'Tu plantilla de certificado ha sido guardada con éxito.',\n    });\n  };\n\n  /**\n   * Gestiona la descarga del certificado como una imagen PNG.\n   * Utiliza html-to-image para convertir el DOM en una imagen y la descarga.\n   */\n  const handleDownload = () => {\n    const element = certificateRef.current;\n    if (!element) {\n      toast({\n        title: 'Error de referencia',\n        description: 'No se pudo encontrar el elemento del certificado para descargar.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    toPng(element, { cacheBust: true, pixelRatio: 2 })\n      .then((dataUrl) => {\n        const pdf = new jsPDF({\n          orientation: 'landscape',\n          unit: 'px',\n          // Use element's dimensions for PDF size to match aspect ratio\n          format: [element.offsetWidth, element.offsetHeight],\n        });\n        const pdfWidth = pdf.internal.pageSize.getWidth();\n        const pdfHeight = pdf.internal.pageSize.getHeight();\n\n        pdf.addImage(dataUrl, 'PNG', 0, 0, pdfWidth, pdfHeight);\n        pdf.save('certificado.pdf');\n        toast({\n          title: 'Descarga Iniciada',\n          description: 'El certificado se está descargando como archivo PDF.',\n        });\n      })\n      .catch((err) => {\n        console.error('Error al generar la imagen:', err);\n        toast({\n          title: 'Error al Descargar',\n          description: 'No se pudo generar la imagen del certificado.',\n          variant: 'destructive',\n        });\n      });\n  };\n\n\n  const styleControls = (elementName: string, elementLabel: string, textState: string | null, setTextState: ((val: string) => void) | null) => (\n    <AccordionItem value={elementName}>\n      <AccordionTrigger>{elementLabel}</AccordionTrigger>\n      <AccordionContent className=\"space-y-4 pt-4\">\n        {textState !== null && setTextState && (\n          <div className=\"space-y-2\">\n            <Label htmlFor={`cert-${elementName}`}>Texto</Label>\n            <Input id={`cert-${elementName}`} value={textState} onChange={(e) => setTextState(e.target.value)} />\n          </div>\n        )}\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-2\">\n            <Label>Tamaño ({elementStyles[elementName].fontSize}px)</Label>\n            <Slider\n              value={[elementStyles[elementName].fontSize]}\n              onValueChange={([val]) => handleStyleChange(elementName, 'fontSize', val)}\n              min={8} max={120} step={1}\n            />\n          </div>\n          <div className=\"space-y-2\">\n            <Label>Ancho ({elementStyles[elementName].width}%)</Label>\n            <Slider\n              value={[elementStyles[elementName].width]}\n              onValueChange={([val]) => handleStyleChange(elementName, 'width', val)}\n              min={10} max={100} step={1}\n            />\n          </div>\n        </div>\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-2\">\n            <Label>Alineación</Label>\n            <Select\n              value={elementStyles[elementName].textAlign}\n              onValueChange={(val: TextAlign) => handleStyleChange(elementName, 'textAlign', val)}\n            >\n              <SelectTrigger><SelectValue /></SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"left\">Izquierda</SelectItem>\n                <SelectItem value=\"center\">Centro</SelectItem>\n                <SelectItem value=\"right\">Derecha</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          <div className=\"space-y-2\">\n            <Label>Grosor</Label>\n            <Select\n              value={elementStyles[elementName].fontWeight}\n              onValueChange={(val: FontWeight) => handleStyleChange(elementName, 'fontWeight', val)}\n            >\n              <SelectTrigger><SelectValue /></SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"300\">Light</SelectItem>\n                <SelectItem value=\"normal\">Normal</SelectItem>\n                <SelectItem value=\"600\">Semi-Bold</SelectItem>\n                <SelectItem value=\"bold\">Negrita</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-2\">\n            <Label>Fuente</Label>\n            <Select\n              value={elementStyles[elementName].fontFamily}\n              onValueChange={(val: FontFamily) => handleStyleChange(elementName, 'fontFamily', val)}\n            >\n              <SelectTrigger><SelectValue /></SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"body\">Alegreya (Cuerpo)</SelectItem>\n                <SelectItem value=\"headline\">Belleza (Títulos)</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor={`${elementName}-color`}>Color</Label>\n            <Input\n              id={`${elementName}-color`}\n              type=\"color\"\n              value={elementStyles[elementName].color}\n              onChange={(e) => handleStyleChange(elementName, 'color', e.target.value)}\n              className=\"p-1 h-10 w-full\"\n            />\n          </div>\n        </div>\n      </AccordionContent>\n    </AccordionItem>\n  );\n\n  return (\n    <div className=\"grid md:grid-cols-2 gap-8 items-start\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Personalizar Certificado</CardTitle>\n          <CardDescription>\n            Ajusta los textos y estilos. Arrastra los elementos en la vista previa para moverlos. Usa{' '}\n            <code className=\"bg-muted px-1 py-0.5 rounded-sm font-code\">{'{{contact.name}}'}</code> y{' '}\n            <code className=\"bg-muted px-1 py-0.5 rounded-sm font-code\">{'{{event.date}}'}</code>{' '}\n            como marcadores de posición.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"bg-image\">Imagen de Fondo</Label>\n            <Input id=\"bg-image\" type=\"file\" accept=\"image/*\" onChange={handleBackgroundImageChange} />\n          </div>\n\n          <Accordion type=\"multiple\" className=\"w-full space-y-2\">\n            {styleControls('title', 'Título', title, setTitle)}\n            {styleControls('issuedTo', 'Texto \"Otorgado a\"', issuedToText, setIssuedToText)}\n            {styleControls('contactName', 'Nombre del Contacto', null, null)}\n            {styleControls('description', 'Descripción/Motivo', description, setDescription)}\n            {styleControls('signature', 'Firma', signatureText, setSignatureText)}\n            {styleControls('date', 'Texto de Fecha', dateText, setDateText)}\n          </Accordion>\n          \n          <Button onClick={handleSaveTemplate} className=\"mt-4 w-full\">Guardar Plantilla</Button>\n        </CardContent>\n      </Card>\n      \n      <div className=\"sticky top-24\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Vista Previa del Certificado</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div ref={certificateRef} className=\"relative aspect-[11/8.5] w-full bg-card-foreground/5 border rounded-lg overflow-hidden\">\n              {backgroundImage ? (\n                <Image src={backgroundImage} alt=\"Fondo del certificado\" fill objectFit=\"cover\" />\n              ) : (\n                <div className=\"grid place-content-center h-full\">\n                  <p className=\"text-muted-foreground\">Sube una imagen de fondo</p>\n                </div>\n              )}\n              <div className=\"absolute inset-0\">\n                \n                <Draggable bounds=\"parent\" nodeRef={titleRef}>\n                  <div ref={titleRef} className=\"absolute cursor-move p-2\" style={{ top: '10%', left: '10%' }}>\n                    <div style={{ width: `${elementStyles.title.width}%`, textAlign: elementStyles.title.textAlign }}>\n                      <h1\n                        className={cn('tracking-wider', `font-${elementStyles.title.fontFamily}`)}\n                        style={{ textShadow: '1px 1px 2px white', fontSize: elementStyles.title.fontSize, color: elementStyles.title.color, fontWeight: elementStyles.title.fontWeight }}\n                      >\n                        {title}\n                      </h1>\n                    </div>\n                  </div>\n                </Draggable>\n\n                <Draggable bounds=\"parent\" nodeRef={issuedToRef}>\n                  <div ref={issuedToRef} className=\"absolute cursor-move p-2\" style={{ top: '25%', left: '10%' }}>\n                    <div style={{ width: `${elementStyles.issuedTo.width}%`, textAlign: elementStyles.issuedTo.textAlign }}>\n                      <p\n                        className={cn(`font-${elementStyles.issuedTo.fontFamily}`)}\n                        style={{ textShadow: '1px 1px 2px white', fontSize: elementStyles.issuedTo.fontSize, color: elementStyles.issuedTo.color, fontWeight: elementStyles.issuedTo.fontWeight }}\n                      >\n                        {issuedToText}\n                      </p>\n                    </div>\n                  </div>\n                </Draggable>\n\n                <Draggable bounds=\"parent\" nodeRef={contactNameRef}>\n                  <div ref={contactNameRef} className=\"absolute cursor-move p-2\" style={{ top: '32%', left: '10%' }}>\n                    <div style={{ width: `${elementStyles.contactName.width}%`, textAlign: elementStyles.contactName.textAlign }}>\n                      <p\n                        className={cn(`font-${elementStyles.contactName.fontFamily}`)}\n                        style={{ textShadow: '1px 1px 2px white', fontSize: elementStyles.contactName.fontSize, color: elementStyles.contactName.color, fontWeight: elementStyles.contactName.fontWeight }}\n                      >\n                        &#123;&#123;contact.name&#125;&#125;\n                      </p>\n                    </div>\n                  </div>\n                </Draggable>\n                \n                <Draggable bounds=\"parent\" nodeRef={descriptionRef}>\n                  <div ref={descriptionRef} className=\"absolute cursor-move p-2\" style={{ top: '45%', left: '10%' }}>\n                    <div style={{ width: `${elementStyles.description.width}%`, textAlign: elementStyles.description.textAlign }}>\n                      <p\n                        className={cn(`font-${elementStyles.description.fontFamily}`)}\n                        style={{ textShadow: '1px 1px 2px white', fontSize: elementStyles.description.fontSize, color: elementStyles.description.color, fontWeight: elementStyles.description.fontWeight }}\n                      >\n                        {description}\n                      </p>\n                    </div>\n                  </div>\n                </Draggable>\n\n                <Draggable bounds=\"parent\" nodeRef={signatureRef}>\n                  <div ref={signatureRef} className=\"absolute cursor-move p-2\" style={{ bottom: '15%', left: '5%' }}>\n                    <div style={{ width: `${elementStyles.signature.width}%`, textAlign: elementStyles.signature.textAlign }}>\n                      <div className=\"border-t-2 border-current pt-1\" style={{borderColor: elementStyles.signature.color}}>\n                        <p\n                          className={cn(`font-${elementStyles.signature.fontFamily}`)}\n                          style={{ textShadow: '1px 1px 2px white', fontSize: elementStyles.signature.fontSize, color: elementStyles.signature.color, fontWeight: elementStyles.signature.fontWeight }}\n                        >\n                          {signatureText}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </Draggable>\n\n                <Draggable bounds=\"parent\" nodeRef={dateRef}>\n                  <div ref={dateRef} className=\"absolute cursor-move p-2\" style={{ bottom: '15%', right: '5%' }}>\n                    <div style={{ width: `${elementStyles.date.width}%`, textAlign: elementStyles.date.textAlign }}>\n                      <div className=\"border-t-2 border-current pt-1\" style={{borderColor: elementStyles.date.color}}>\n                        <p\n                          className={cn(`font-${elementStyles.date.fontFamily}`)}\n                          style={{ textShadow: '1px 1px 2px white', fontSize: elementStyles.date.fontSize, color: elementStyles.date.color, fontWeight: elementStyles.date.fontWeight }}\n                        >\n                          {dateText} &#123;&#123;event.date&#125;&#125;\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </Draggable>\n              </div>\n            </div>\n          </CardContent>\n          <CardFooter>\n            <Button onClick={handleDownload} className=\"w-full\">\n              <Download className=\"mr-2\" />\n              Descargar Certificado\n            </Button>\n          </CardFooter>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1954, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/event-editor.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { cn } from \"@/lib/utils\";\nimport { format } from \"date-fns\";\nimport { es } from \"date-fns/locale\";\nimport { Calendar as CalendarIcon, Save } from 'lucide-react';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { CertificateEditor } from '@/components/certificate-editor';\n\ntype RecipientSource = \"date\" | \"file\" | \"sql\";\n\n/**\n * Componente cliente para el editor de eventos y certificados.\n * Permite definir los detalles del evento, configurar los destinatarios\n * y personalizar la plantilla del certificado.\n */\nexport function EventEditor() {\n  const { toast } = useToast();\n  \n  // State for Recipient Selection\n  const [recipientSource, setRecipientSource] = useState<RecipientSource>(\"date\");\n  const [date, setDate] = useState<Date>();\n  const [fileContent, setFileContent] = useState(\"\");\n  const [uploadedFileType, setUploadedFileType] = useState<\"csv\" | \"excel\" | null>(null);\n  const [sqlQuery, setSqlQuery] = useState(\"SELECT email, name FROM attendees WHERE event_id = 'your_event_id';\");\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      const fileName = file.name.toLowerCase();\n\n      const resetState = () => {\n        e.target.value = '';\n        setFileContent(\"\");\n        setUploadedFileType(null);\n      }\n\n      if (fileName.endsWith(\".csv\")) {\n        setUploadedFileType(\"csv\");\n        reader.onload = (event) => setFileContent(event.target?.result as string);\n        reader.readAsText(file);\n      } else if (fileName.endsWith(\".xls\") || fileName.endsWith(\".xlsx\")) {\n        setUploadedFileType(\"excel\");\n        reader.onload = (event) => {\n          const buffer = event.target?.result as ArrayBuffer;\n          const bytes = new Uint8Array(buffer);\n          let binary = \"\";\n          bytes.forEach((byte) => { binary += String.fromCharCode(byte); });\n          setFileContent(window.btoa(binary));\n        };\n        reader.readAsArrayBuffer(file);\n      } else {\n        toast({\n          title: \"Archivo no válido\",\n          description: \"Por favor, selecciona un archivo .csv, .xls o .xlsx.\",\n          variant: \"destructive\",\n        });\n        resetState();\n        return;\n      }\n      \n      reader.onerror = () => {\n        toast({\n          title: \"Error al leer el archivo\",\n          description: \"No se pudo procesar el archivo seleccionado.\",\n          variant: \"destructive\",\n        });\n        resetState();\n      };\n    }\n  };\n\n  const handleSaveEvent = () => {\n    // Here you would normally gather all the data and send to a server action.\n    // For now, we'll just show a toast.\n    toast({\n      title: \"Evento Guardado\",\n      description: \"La configuración del evento y el certificado se ha guardado.\",\n    });\n  };\n\n  return (\n    <div className=\"space-y-8\">\n       <div>\n        <div className=\"flex items-center justify-between mb-2\">\n            <h1 className=\"text-3xl font-headline font-bold\">Editor de Eventos</h1>\n            <Button onClick={handleSaveEvent}>\n                <Save className=\"mr-2 h-4 w-4\" />\n                Guardar Evento\n            </Button>\n        </div>\n        <p className=\"text-muted-foreground\">\n          Crea un nuevo evento, define los destinatarios y personaliza el certificado de asistencia.\n        </p>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>1. Detalles del Evento y Correo</CardTitle>\n          <CardDescription>\n            Configura la información básica del evento y el remitente del correo.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"event-name\">Nombre del Evento</Label>\n              <Input id=\"event-name\" placeholder=\"Ej: Conferencia Anual de Tecnología\" />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"sender-email\">Email del Remitente</Label>\n              <Input id=\"sender-email\" type=\"email\" placeholder=\"tu-correo@ejemplo.com\" />\n            </div>\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"event-description\">Descripción del Evento</Label>\n            <Textarea id=\"event-description\" placeholder=\"Describe brevemente de qué trata el evento...\" />\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>2. Destinatarios del Certificado</CardTitle>\n          <CardDescription>\n            Define quiénes recibirán el certificado de asistencia. La lista debe contener una columna \"email\".\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Tabs\n            value={recipientSource}\n            onValueChange={(value) => setRecipientSource(value as RecipientSource)}\n            className=\"w-full\"\n          >\n            <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"date\">Fecha de Visita (BD)</TabsTrigger>\n              <TabsTrigger value=\"file\">Subir Archivo</TabsTrigger>\n              <TabsTrigger value=\"sql\">Consulta SQL</TabsTrigger>\n            </TabsList>\n            <TabsContent value=\"date\" className=\"mt-4 border-t pt-4\">\n              <Label className=\"mb-2 block\">Selecciona la fecha de visita de los asistentes</Label>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <Button variant={\"outline\"} className=\"w-[280px] justify-start text-left font-normal\">\n                    <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                    {date ? format(date, \"PPP\", { locale: es }) : <span>Elige una fecha</span>}\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\">\n                  <Calendar mode=\"single\" selected={date} onSelect={setDate} initialFocus locale={es} />\n                </PopoverContent>\n              </Popover>\n            </TabsContent>\n            <TabsContent value=\"file\" className=\"mt-4 space-y-2 border-t pt-4\">\n              <Label htmlFor=\"file-upload\">Sube un archivo CSV o Excel de asistentes</Label>\n              <Input\n                id=\"file-upload\"\n                type=\"file\"\n                accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                onChange={handleFileChange}\n              />\n              <p className=\"text-sm text-muted-foreground\">\n                El archivo debe contener una columna \"email\" y opcionalmente \"name\".\n              </p>\n            </TabsContent>\n            <TabsContent value=\"sql\" className=\"mt-4 space-y-2 border-t pt-4\">\n              <Label htmlFor=\"sql-query\">Escribe tu consulta SQL para obtener los asistentes</Label>\n              <Textarea\n                id=\"sql-query\"\n                value={sqlQuery}\n                onChange={(e) => setSqlQuery(e.target.value)}\n                rows={4}\n                placeholder=\"SELECT email, name FROM attendees WHERE...\"\n              />\n              <p className=\"text-sm text-muted-foreground\">\n                La consulta debe devolver una columna \"email\" y opcionalmente \"name\".\n              </p>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>3. Diseño del Certificado</CardTitle>\n          <CardDescription>\n            Personaliza la plantilla que se enviará a los destinatarios.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n            <CertificateEditor />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}