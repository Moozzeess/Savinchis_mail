{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["/**\n * @fileOverview Datos de prueba para la aplicación.\n * Este archivo contiene datos de ejemplo para campañas y contactos,\n * utilizados para poblar la interfaz de usuario hasta que se conecte una base de datos real.\n */\n\n/**\n * Datos de ejemplo para las campañas de correo electrónico.\n */\nexport const campaigns = [\n  {\n    name: \"Campaña de Bienvenida\",\n    status: \"TERMINADA\",\n    sent: \"5,000\",\n    opens: \"35%\",\n    clicks: \"8%\",\n    date: \"2024-07-01\",\n  },\n  {\n    name: \"Oferta Flash 24h\",\n    status: \"EXPIRADA\",\n    sent: \"2,500\",\n    opens: \"45%\",\n    clicks: \"15%\",\n    date: \"2024-07-10\",\n  },\n  {\n    name: \"Lanzamiento Nuevo Producto\",\n    status: \"INICIADA\",\n    sent: \"1,200\",\n    opens: \"12%\",\n    clicks: \"2%\",\n    date: \"2024-07-18\",\n  },\n  {\n    name: \"Promoción Black Friday\",\n    status: \"TIEMPO LIMITADO\",\n    sent: \"0\",\n    opens: \"-\",\n    clicks: \"-\",\n    date: \"2024-11-29\",\n  },\n  {\n    name: \"Venta de Aniversario\",\n    status: \"AGOTADA\",\n    sent: \"10,000\",\n    opens: \"50%\",\n    clicks: \"20%\",\n    date: \"2024-06-15\",\n  },\n];\n\n/**\n * Datos de ejemplo para los contactos.\n */\nexport const contacts = [\n  {\n    email: \"juan.perez@example.com\",\n    name: \"Juan Perez\",\n    status: \"Suscrito\",\n    dateAdded: \"2024-07-10\",\n  },\n  {\n    email: \"maria.garcia@example.com\",\n    name: \"Maria Garcia\",\n    status: \"Suscrito\",\n    dateAdded: \"2024-07-09\",\n  },\n  {\n    email: \"baja@example.com\",\n    name: \"Carlos Baja\",\n    status: \"Baja\",\n    dateAdded: \"2024-06-20\",\n  },\n];\n\n/**\n * Datos de ejemplo para las encuestas.\n */\nexport const surveys = [\n  {\n    id: \"1\",\n    name: \"Feedback de Producto de TI\",\n    description: \"Encuesta para recopilar opiniones sobre nuestro último software.\",\n    responses: 150,\n  },\n  {\n    id: \"2\",\n    name: \"Satisfacción del Cliente Tech\",\n    description: \"Mide la satisfacción general de nuestros clientes con el soporte técnico.\",\n    responses: 278,\n  },\n  {\n    id: \"3\",\n    name: \"Interés en Nuevos Cursos\",\n    description: \"Sondeo sobre posibles nuevos cursos de desarrollo y TI.\",\n    responses: 45,\n  },\n];\n\n/**\n * Datos de ejemplo para los eventos.\n */\nexport const events = [\n  {\n    id: \"1\",\n    name: \"Taller de Marketing Digital\",\n    date: \"2024-08-15\",\n    status: \"Realizado\",\n    attendees: 75,\n  },\n  {\n    id: \"2\",\n    name: \"Conferencia de Liderazgo\",\n    date: \"2024-09-05\",\n    status: \"Próximo\",\n    attendees: 120,\n  },\n  {\n    id: \"3\",\n    name: \"Webinar de Nuevas Tecnologías\",\n    date: \"2024-07-20\",\n    status: \"Realizado\",\n    attendees: 250,\n  },\n];\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;CAEC;;;;;;AACM,MAAM,YAAY;IACvB;QACE,MAAM;QACN,QAAQ;QACR,MAAM;QACN,OAAO;QACP,QAAQ;QACR,MAAM;IACR;IACA;QACE,MAAM;QACN,QAAQ;QACR,MAAM;QACN,OAAO;QACP,QAAQ;QACR,MAAM;IACR;IACA;QACE,MAAM;QACN,QAAQ;QACR,MAAM;QACN,OAAO;QACP,QAAQ;QACR,MAAM;IACR;IACA;QACE,MAAM;QACN,QAAQ;QACR,MAAM;QACN,OAAO;QACP,QAAQ;QACR,MAAM;IACR;IACA;QACE,MAAM;QACN,QAAQ;QACR,MAAM;QACN,OAAO;QACP,QAAQ;QACR,MAAM;IACR;CACD;AAKM,MAAM,WAAW;IACtB;QACE,OAAO;QACP,MAAM;QACN,QAAQ;QACR,WAAW;IACb;IACA;QACE,OAAO;QACP,MAAM;QACN,QAAQ;QACR,WAAW;IACb;IACA;QACE,OAAO;QACP,MAAM;QACN,QAAQ;QACR,WAAW;IACb;CACD;AAKM,MAAM,UAAU;IACrB;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,WAAW;IACb;CACD;AAKM,MAAM,SAAS;IACpB;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;IACb;CACD","debugId":null}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/send-campaign-action.ts"],"sourcesContent":["'use server';\n\nimport 'isomorphic-fetch';\nimport { ClientSecretCredential } from '@azure/identity';\nimport { Client } from '@microsoft/microsoft-graph-client';\nimport { TokenCredentialAuthenticationProvider } from '@microsoft/microsoft-graph-client/authProviders/azureTokenCredentials';\nimport mysql from 'mysql2/promise';\nimport { parse } from 'csv-parse/sync';\nimport * as XLSX from 'xlsx';\n\n/**\n * @fileoverview Acción de servidor para enviar una campaña de correo electrónico.\n * Obtiene destinatarios desde una fuente de datos y los envía por lotes\n * para respetar los límites de la API, utilizando Microsoft Graph.\n */\n\ninterface SendCampaignPayload {\n  subject: string;\n  htmlBody: string;\n  recipientData: {\n    type: 'date' | 'csv' | 'sql' | 'excel';\n    value: string;\n  };\n}\n\n/**\n * Obtiene una lista de destinatarios desde la fuente especificada.\n */\nasync function getRecipients(\n  recipientData: SendCampaignPayload['recipientData']\n): Promise<{ email: string }[]> {\n  const { type, value } = recipientData;\n\n  if (type === 'csv') {\n    try {\n      const records = parse(value, {\n        columns: true,\n        skip_empty_lines: true,\n      });\n      if (records.length === 0 || !('email' in records[0])) {\n        throw new Error('La columna \"email\" no se encontró o el archivo está vacío.');\n      }\n      return records.map((record: any) => ({ email: record.email })).filter((r: {email: string}) => r.email && r.email.includes('@'));\n    } catch (error) {\n      console.error('Error al procesar el archivo CSV:', error);\n      throw new Error(`Error al procesar el archivo CSV: ${(error as Error).message}`);\n    }\n  }\n\n  if (type === 'excel') {\n    try {\n      const buffer = Buffer.from(value, 'base64');\n      const workbook = XLSX.read(buffer, { type: 'buffer' });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData: any[] = XLSX.utils.sheet_to_json(worksheet);\n      if (jsonData.length === 0) return [];\n      const emailKey = Object.keys(jsonData[0]).find(key => key.toLowerCase() === 'email');\n      if (!emailKey) throw new Error('La columna \"email\" no se encontró en el archivo Excel.');\n      return jsonData.map(row => ({ email: row[emailKey] })).filter(r => r.email && typeof r.email === 'string' && r.email.includes('@'));\n    } catch (error) {\n      console.error('Error al procesar el archivo Excel:', error);\n      throw new Error(`Error al procesar el archivo Excel: ${(error as Error).message}`);\n    }\n  }\n\n  const { MYSQL_HOST, MYSQL_USER, MYSQL_PASSWORD, MYSQL_DATABASE, MYSQL_PORT } = process.env;\n  if (!MYSQL_HOST || !MYSQL_USER || !MYSQL_DATABASE) {\n    throw new Error('Faltan las variables de entorno de la base de datos. Por favor, configúralas.');\n  }\n\n  let connection;\n  try {\n    connection = await mysql.createConnection({\n      host: MYSQL_HOST,\n      port: MYSQL_PORT ? parseInt(MYSQL_PORT, 10) : 3306,\n      user: MYSQL_USER,\n      password: MYSQL_PASSWORD,\n      database: MYSQL_DATABASE,\n    });\n\n    let sql_query = '';\n    let params: any[] = [];\n\n    if (type === 'date') {\n      sql_query = `\n        SELECT t1.email\n        FROM order_data AS t1 INNER JOIN order_data_online AS t2 ON t1.Ds_Merchant_Order = t2.Ds_Order\n        WHERE\n            t1.fecha_visita = ?\n            AND t2.Ds_ErrorCode = '00'\n            AND t2.Ds_ErrorMessage = 'completed'\n            AND NOT t1.email IN ('alberto.silva@papalote.org.mx', 'alejandracervantesm@gmail.com')\n      `;\n      params = [value];\n    } else if (type === 'sql') {\n      sql_query = value;\n    }\n\n    const [rows] = await connection.execute(sql_query, params);\n    return (rows as { email: string }[]).filter(row => row.email);\n  } catch (error) {\n    console.error('Error al conectar o consultar la base de datos:', error);\n    throw new Error('No se pudo obtener los contactos de la base de datos.');\n  } finally {\n    if (connection) await connection.end();\n  }\n}\n\nasync function getGraphClient() {\n    const { GRAPH_CLIENT_ID, GRAPH_TENANT_ID, GRAPH_CLIENT_SECRET } = process.env;\n    if (!GRAPH_CLIENT_ID || !GRAPH_TENANT_ID || !GRAPH_CLIENT_SECRET) {\n        throw new Error('Faltan las variables de entorno de Microsoft Graph. Por favor, configúralas.');\n    }\n    const credential = new ClientSecretCredential(GRAPH_TENANT_ID, GRAPH_CLIENT_ID, GRAPH_CLIENT_SECRET);\n    const authProvider = new TokenCredentialAuthenticationProvider(credential, { scopes: ['https://graph.microsoft.com/.default'] });\n    return Client.initWithMiddleware({ authProvider });\n}\n\nconst delay = (ms: number) => new Promise(res => setTimeout(res, ms));\n\nexport async function sendCampaign(payload: SendCampaignPayload) {\n  const { subject, htmlBody, recipientData } = payload;\n  const startTime = Date.now();\n\n  const { GRAPH_USER_MAIL, GRAPH_BATCH_SIZE, GRAPH_DELAY_SECONDS } = process.env;\n  if (!GRAPH_USER_MAIL) {\n    throw new Error('Falta la variable de entorno GRAPH_USER_MAIL. Por favor, configúrala.');\n  }\n\n  const BATCH_SIZE = parseInt(GRAPH_BATCH_SIZE || '50', 10);\n  const DELAY_MS = parseInt(GRAPH_DELAY_SECONDS || '1', 10) * 1000;\n\n  const recipients = await getRecipients(recipientData);\n  if (recipients.length === 0) {\n    return { success: true, message: `No se encontraron destinatarios. No se enviaron correos.`, stats: { sentCount: 0, failedCount: 0, totalRecipients: 0, duration: 0 } };\n  }\n\n  const totalRecipients = recipients.length;\n  const graphClient = await getGraphClient();\n  let sentCount = 0;\n  let failedCount = 0;\n\n  const recipientBatches = [];\n  for (let i = 0; i < recipients.length; i += BATCH_SIZE) {\n    recipientBatches.push(recipients.slice(i, i + BATCH_SIZE));\n  }\n\n  for (const [index, batch] of recipientBatches.entries()) {\n    const sendPromises = batch.map(contact => {\n      const message = {\n        subject: subject,\n        body: { contentType: 'HTML', content: htmlBody },\n        toRecipients: [{ emailAddress: { address: contact.email } }],\n      };\n      return graphClient.api(`/users/${GRAPH_USER_MAIL}/sendMail`).post({ message, saveToSentItems: 'true' });\n    });\n\n    const results = await Promise.allSettled(sendPromises);\n\n    results.forEach((result, i) => {\n      if (result.status === 'fulfilled') {\n        sentCount++;\n      } else {\n        failedCount++;\n        const contactEmail = batch[i].email;\n        const errorMessage = (result.reason as any)?.body ? JSON.parse((result.reason as any).body).error.message : (result.reason as Error).message;\n        console.error(`Error al enviar correo a ${contactEmail} usando Graph:`, errorMessage);\n      }\n    });\n\n    if (index < recipientBatches.length - 1) {\n      await delay(DELAY_MS);\n    }\n  }\n  \n  const endTime = Date.now();\n  const duration = (endTime - startTime) / 1000;\n\n  let message = `Campaña enviada con Microsoft Graph. Enviados: ${sentCount}. Fallidos: ${failedCount}.`;\n  if (failedCount > 0) {\n    message += ' Revisa la consola del servidor para más detalles sobre los errores.';\n  }\n\n  return { success: true, message, stats: { sentCount, failedCount, totalRecipients, duration } };\n}\n"],"names":[],"mappings":";;;;;;IAyHsB,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/campaigns/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Calendar as CalendarIcon,\n  Loader2,\n  PlusCircle,\n  Users,\n  Clock,\n  AlertTriangle,\n  CheckCircle,\n  TrendingUp,\n} from \"lucide-react\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport { es } from \"date-fns/locale\";\nimport { campaigns } from \"@/lib/data\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { sendCampaign } from \"@/app/actions/send-campaign-action\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Input } from \"@/components/ui/input\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { cn } from \"@/lib/utils\";\n\ntype RecipientSource = \"date\" | \"file\" | \"sql\";\n\ninterface CampaignStats {\n  sentCount: number;\n  failedCount: number;\n  totalRecipients: number;\n  duration: number;\n}\n\n/**\n * Página de Campañas.\n * Permite a los usuarios crear, programar y enviar nuevas campañas de correo,\n * ver el historial de campañas enviadas y gestionar su estado.\n */\nexport default function CampaignsPage() {\n  const [date, setDate] = useState<Date>();\n  const [isSending, setIsSending] = useState(false);\n  const { toast } = useToast();\n\n  const [subject, setSubject] = useState(\"\");\n  const [emailBody, setEmailBody] = useState(\"\");\n  const [previewContent, setPreviewContent] = useState(\"\");\n  const [recipientSource, setRecipientSource] =\n    useState<RecipientSource>(\"date\");\n  const [fileContent, setFileContent] = useState(\"\");\n  const [uploadedFileType, setUploadedFileType] = useState<\"csv\" | \"excel\" | null>(null);\n  const [sqlQuery, setSqlQuery] = useState(\n    \"SELECT email FROM contacts WHERE subscribed = TRUE;\"\n  );\n  const [lastRunStats, setLastRunStats] = useState<CampaignStats | null>(null);\n\n  useEffect(() => {\n    setPreviewContent(emailBody);\n  }, [emailBody]);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      const fileName = file.name.toLowerCase();\n\n      const resetState = () => {\n        e.target.value = '';\n        setFileContent(\"\");\n        setUploadedFileType(null);\n      }\n\n      if (fileName.endsWith(\".csv\")) {\n        setUploadedFileType(\"csv\");\n        reader.onload = (event) => {\n          setFileContent(event.target?.result as string);\n        };\n        reader.readAsText(file);\n      } else if (fileName.endsWith(\".xls\") || fileName.endsWith(\".xlsx\")) {\n        setUploadedFileType(\"excel\");\n        reader.onload = (event) => {\n          const buffer = event.target?.result as ArrayBuffer;\n          const bytes = new Uint8Array(buffer);\n          let binary = \"\";\n          bytes.forEach((byte) => {\n            binary += String.fromCharCode(byte);\n          });\n          setFileContent(window.btoa(binary));\n        };\n        reader.readAsArrayBuffer(file);\n      } else {\n        toast({\n          title: \"Archivo no válido\",\n          description: \"Por favor, selecciona un archivo .csv, .xls o .xlsx.\",\n          variant: \"destructive\",\n        });\n        resetState();\n        return;\n      }\n      \n      reader.onerror = () => {\n        toast({\n          title: \"Error al leer el archivo\",\n          description: \"No se pudo procesar el archivo seleccionado.\",\n          variant: \"destructive\",\n        });\n        resetState();\n      };\n    }\n  };\n\n  const handleHtmlFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      if (!file.name.endsWith(\".html\")) {\n        toast({\n          title: \"Archivo no válido\",\n          description: \"Por favor, selecciona un archivo .html.\",\n          variant: \"destructive\",\n        });\n        e.target.value = \"\"; // Reset file input\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setEmailBody(event.target?.result as string);\n        toast({\n          title: \"HTML Cargado\",\n          description: \"El contenido del archivo HTML se ha cargado en el editor.\",\n        });\n      };\n      reader.onerror = () => {\n        toast({\n          title: \"Error al leer el archivo\",\n          description: \"No se pudo procesar el archivo seleccionado.\",\n          variant: \"destructive\",\n        });\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  /**\n   * Gestiona el envío de una campaña.\n   * Valida los campos, prepara el payload y llama a la acción del servidor.\n   */\n  const handleSendCampaign = async () => {\n    setLastRunStats(null);\n    if (!subject.trim()) {\n      toast({\n        title: \"Asunto del correo requerido\",\n        description: \"Por favor, escribe un asunto para la campaña.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (!previewContent.trim()) {\n      toast({\n        title: \"Cuerpo del correo vacío\",\n        description: \"Por favor, escribe el contenido del correo.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    let recipientData;\n\n    switch (recipientSource) {\n      case \"date\":\n        if (!date) {\n          toast({\n            title: \"Fecha de visita requerida\",\n            description: \"Por favor, selecciona una fecha.\",\n            variant: \"destructive\",\n          });\n          return;\n        }\n        recipientData = {\n          type: \"date\" as const,\n          value: format(date, \"dd/MM/yyyy\"),\n        };\n        break;\n      case \"file\":\n        if (!fileContent || !uploadedFileType) {\n          toast({\n            title: \"Archivo requerido\",\n            description: \"Por favor, sube un archivo CSV o Excel.\",\n            variant: \"destructive\",\n          });\n          return;\n        }\n        recipientData = { type: uploadedFileType, value: fileContent };\n        break;\n      case \"sql\":\n        if (!sqlQuery.trim()) {\n          toast({\n            title: \"Consulta SQL requerida\",\n            description: \"Por favor, escribe una consulta SQL.\",\n            variant: \"destructive\",\n          });\n          return;\n        }\n        recipientData = { type: \"sql\" as const, value: sqlQuery };\n        break;\n      default:\n        toast({\n          title: \"Fuente de destinatarios no válida\",\n          variant: \"destructive\",\n        });\n        return;\n    }\n\n    setIsSending(true);\n    try {\n      const result = await sendCampaign({\n        subject: subject,\n        htmlBody: previewContent,\n        recipientData: recipientData,\n      });\n\n      toast({\n        title: \"Proceso de envío finalizado\",\n        description: result.message,\n      });\n      if (result.stats) {\n        setLastRunStats(result.stats);\n      }\n    } catch (error) {\n      toast({\n        title: \"Error al enviar la campaña\",\n        description: (error as Error).message,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-headline font-bold\">Campañas</h1>\n          <p className=\"text-muted-foreground\">\n            Gestiona y programa tus campañas de correo electrónico.\n          </p>\n        </div>\n        <Button>\n          <PlusCircle className=\"mr-2\" />\n          Crear Campaña\n        </Button>\n      </div>\n\n      <div className=\"grid lg:grid-cols-2 gap-8 items-start\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Crear Nueva Campaña</CardTitle>\n            <CardDescription>\n              Define el contenido y los destinatarios para enviar tu campaña.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"subject\">Asunto del Correo</Label>\n              <Input\n                id=\"subject\"\n                placeholder=\"Ej: Novedades de este mes\"\n                value={subject}\n                onChange={(e) => setSubject(e.target.value)}\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center\">\n                <Label>Cuerpo del Mensaje</Label>\n                <Label htmlFor=\"html-upload\" className=\"text-sm font-normal text-primary underline-offset-4 hover:underline cursor-pointer\">\n                  O sube un archivo HTML\n                </Label>\n                <Input id=\"html-upload\" type=\"file\" accept=\".html\" className=\"hidden\" onChange={handleHtmlFileChange} />\n              </div>\n              <Textarea\n                placeholder=\"Escribe o pega tu código HTML aquí...\"\n                value={emailBody}\n                onChange={(e) => setEmailBody(e.target.value)}\n                rows={10}\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label>Fuente de Destinatarios</Label>\n              <Tabs\n                value={recipientSource}\n                onValueChange={(value) =>\n                  setRecipientSource(value as RecipientSource)\n                }\n                className=\"w-full\"\n              >\n                <TabsList className=\"grid w-full grid-cols-3\">\n                  <TabsTrigger value=\"date\">Fecha de Visita</TabsTrigger>\n                  <TabsTrigger value=\"file\">Subir Archivo</TabsTrigger>\n                  <TabsTrigger value=\"sql\">Consulta SQL</TabsTrigger>\n                </TabsList>\n                <TabsContent value=\"date\" className=\"mt-4 border-t pt-4\">\n                  <Label className=\"mb-2 block\">\n                    Selecciona la fecha de visita\n                  </Label>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant={\"outline\"}\n                        className=\"w-[280px] justify-start text-left font-normal\"\n                      >\n                        <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                        {date ? (\n                          format(date, \"PPP\", { locale: es })\n                        ) : (\n                          <span>Elige una fecha</span>\n                        )}\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\">\n                      <Calendar\n                        mode=\"single\"\n                        selected={date}\n                        onSelect={setDate}\n                        initialFocus\n                        locale={es}\n                      />\n                    </PopoverContent>\n                  </Popover>\n                </TabsContent>\n                <TabsContent value=\"file\" className=\"mt-4 space-y-2 border-t pt-4\">\n                  <Label htmlFor=\"file-upload\">Sube un archivo CSV o Excel</Label>\n                  <Input\n                    id=\"file-upload\"\n                    type=\"file\"\n                    accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    onChange={handleFileChange}\n                  />\n                  <p className=\"text-sm text-muted-foreground\">\n                    El archivo debe contener una columna \"email\".\n                  </p>\n                </TabsContent>\n                <TabsContent value=\"sql\" className=\"mt-4 space-y-2 border-t pt-4\">\n                  <Label htmlFor=\"sql-query\">Escribe tu consulta SQL</Label>\n                  <Textarea\n                    id=\"sql-query\"\n                    value={sqlQuery}\n                    onChange={(e) => setSqlQuery(e.target.value)}\n                    rows={4}\n                    placeholder=\"SELECT email FROM users;\"\n                  />\n                  <p className=\"text-sm text-muted-foreground\">\n                    La consulta debe devolver una columna \"email\".\n                  </p>\n                </TabsContent>\n              </Tabs>\n            </div>\n          </CardContent>\n          <CardFooter>\n            <Button onClick={handleSendCampaign} disabled={isSending}>\n              {isSending && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n              {isSending ? \"Enviando...\" : \"Enviar Campaña\"}\n            </Button>\n          </CardFooter>\n        </Card>\n\n        <div className=\"sticky top-24 space-y-8\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Vista Previa del Correo</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"aspect-[9/12] w-full bg-muted rounded-lg overflow-hidden border\">\n                <iframe\n                  srcDoc={previewContent}\n                  title=\"Email Preview\"\n                  className=\"w-full h-full border-0\"\n                  sandbox=\"allow-scripts\"\n                />\n              </div>\n            </CardContent>\n          </Card>\n\n          {lastRunStats && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Resumen del Último Envío</CardTitle>\n                <CardDescription>\n                  Estadísticas de la campaña que acabas de enviar.\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4 text-sm\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground flex items-center gap-2\">\n                    <Users className=\"h-4 w-4\" /> Total Destinatarios\n                  </span>\n                  <span className=\"font-bold\">{lastRunStats.totalRecipients}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground flex items-center gap-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-500\" /> Enviados\n                  </span>\n                  <span className=\"font-bold\">{lastRunStats.sentCount}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground flex items-center gap-2\">\n                    <AlertTriangle className=\"h-4 w-4 text-destructive\" /> Fallidos\n                  </span>\n                  <span className=\"font-bold\">{lastRunStats.failedCount}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground flex items-center gap-2\">\n                    <Clock className=\"h-4 w-4\" /> Duración\n                  </span>\n                  <span className=\"font-bold\">\n                    {lastRunStats.duration.toFixed(2)}s\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground flex items-center gap-2\">\n                    <TrendingUp className=\"h-4 w-4\" /> Velocidad de Envío\n                  </span>\n                  <span className=\"font-bold\">\n                    {lastRunStats.duration > 0\n                      ? (\n                          lastRunStats.sentCount / lastRunStats.duration\n                        ).toFixed(2)\n                      : \"N/A\"}{\" \"}\n                    correos/s\n                  </span>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Historial de Campañas</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Nombre</TableHead>\n                <TableHead>Estado</TableHead>\n                <TableHead>Enviados</TableHead>\n                <TableHead>Aperturas</TableHead>\n                <TableHead>Clics</TableHead>\n                <TableHead>Fecha</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {campaigns.map((campaign) => (\n                <TableRow key={campaign.name}>\n                  <TableCell className=\"font-medium\">{campaign.name}</TableCell>\n                  <TableCell>\n                    <Badge\n                      variant={\n                        campaign.status === \"AGOTADA\"\n                          ? \"destructive\"\n                          : campaign.status === \"EXPIRADA\"\n                          ? \"outline\"\n                          : \"default\"\n                      }\n                      className={cn({\n                        \"bg-green-500/20 text-green-700 border-transparent hover:bg-green-500/30\":\n                          campaign.status === \"TERMINADA\",\n                        \"bg-blue-500/20 text-blue-700 border-transparent hover:bg-blue-500/30\":\n                          campaign.status === \"INICIADA\",\n                        \"bg-yellow-500/20 text-yellow-700 border-transparent hover:bg-yellow-500/30\":\n                          campaign.status === \"TIEMPO LIMITADO\",\n                      })}\n                    >\n                      {campaign.status}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>{campaign.sent}</TableCell>\n                  <TableCell>{campaign.opens}</TableCell>\n                  <TableCell>{campaign.clicks}</TableCell>\n                  <TableCell>{campaign.date}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}