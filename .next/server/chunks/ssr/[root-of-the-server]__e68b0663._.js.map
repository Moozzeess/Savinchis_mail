{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["/**\n * @fileoverview Configuración e inicialización de Genkit.\n * Este archivo centraliza la configuración del framework de IA Genkit,\n * especificando los plugins a utilizar (como Google AI) y el modelo\n * de lenguaje por defecto para toda la aplicación.\n */\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\n/**\n * @constant ai\n * Instancia global de Genkit configurada para la aplicación.\n * Utiliza el plugin de Google AI y establece 'gemini-2.0-flash' como el modelo por defecto.\n */\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACD;AAAA;AACA;AAAA;;;AAOO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/optimize-email-content.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A flow that uses AI to suggest improvements for email content to avoid spam filters and increase engagement.\n *\n * - optimizeEmailContent - A function that optimizes email content using AI.\n * - OptimizeEmailContentInput - The input type for the optimizeEmailContent function.\n * - OptimizeEmailContentOutput - The return type for the optimizeEmailContent function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst OptimizeEmailContentInputSchema = z.object({\n  emailContent: z.string().describe('The email content to be optimized.'),\n  audience: z.string().describe('Description of the target audience.'),\n});\nexport type OptimizeEmailContentInput = z.infer<\n  typeof OptimizeEmailContentInputSchema\n>;\n\nconst OptimizeEmailContentOutputSchema = z.object({\n  optimizedContent: z\n    .string()\n    .describe('The optimized email content with suggestions.'),\n  spamScore: z\n    .number()\n    .optional()\n    .describe('A score indicating the likelihood of being flagged as spam.'),\n  engagementSuggestions: z\n    .string()\n    .optional()\n    .describe('Suggestions to improve audience engagement.'),\n});\nexport type OptimizeEmailContentOutput = z.infer<\n  typeof OptimizeEmailContentOutputSchema\n>;\n\nexport async function optimizeEmailContent(\n  input: OptimizeEmailContentInput\n): Promise<OptimizeEmailContentOutput> {\n  return optimizeEmailContentFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'optimizeEmailContentPrompt',\n  input: {schema: OptimizeEmailContentInputSchema},\n  output: {schema: OptimizeEmailContentOutputSchema},\n  prompt: `You are an AI assistant specializing in email marketing. Your goal is to help users optimize their email content to avoid spam filters and increase engagement.\n\n  Consider the following email content and target audience:\n\n  Email Content: {{{emailContent}}}\n  Target Audience: {{{audience}}}\n\n  Provide the optimized email content with clear suggestions on how to improve it, including specific changes to avoid spam triggers and enhance engagement. Also, provide a spam score indicating the likelihood of the email being flagged as spam (lower is better) and engagement suggestions to improve audience engagement.\n  Remember to re-write the email entirely using the instructions given.\n`,\n});\n\nconst optimizeEmailContentFlow = ai.defineFlow(\n  {\n    name: 'optimizeEmailContentFlow',\n    inputSchema: OptimizeEmailContentInputSchema,\n    outputSchema: OptimizeEmailContentOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAKA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,kBAAkB,uIAAA,CAAA,IAAC,CAChB,MAAM,GACN,QAAQ,CAAC;IACZ,WAAW,uIAAA,CAAA,IAAC,CACT,MAAM,GACN,QAAQ,GACR,QAAQ,CAAC;IACZ,uBAAuB,uIAAA,CAAA,IAAC,CACrB,MAAM,GACN,QAAQ,GACR,QAAQ,CAAC;AACd;AAKO,eAAe,qBACpB,KAAgC;IAEhC,OAAO,yBAAyB;AAClC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA+B;IAC/C,QAAQ;QAAC,QAAQ;IAAgC;IACjD,QAAQ,CAAC;;;;;;;;;AASX,CAAC;AACD;AAEA,MAAM,2BAA2B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC5C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA/BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/permissions.ts"],"sourcesContent":["/**\n * @fileoverview Define los roles y permisos para el Control de Acceso Basado en Roles (RBAC).\n * Este archivo centraliza la lógica de permisos para simular un sistema RBAC.\n * En una aplicación real, esta información provendría de una base de datos.\n */\n\nexport const ROLES = {\n  IT: 'it',\n  MARKETING: 'marketing',\n  HR: 'hr',\n} as const;\n\nexport type Role = (typeof ROLES)[keyof typeof ROLES];\n\n// Define los permisos disponibles en la aplicación.\nexport const APP_PERMISSIONS = {\n  // General\n  VIEW_DASHBOARD: 'dashboard:view',\n  // Envío\n  SEND_CAMPAIGN: 'campaign:send',\n  VIEW_CAMPAIGN_MONITOR: 'campaign:view',\n  VIEW_MAILBOX: 'mailbox:view',\n  // Gestión\n  VIEW_CONTACTS: 'contacts:view',\n  VIEW_TEMPLATES: 'templates:view',\n  VIEW_EVENTS: 'events:view',\n  VIEW_SURVEYS: 'surveys:view',\n  // Avanzado\n  VIEW_PERFORMANCE: 'performance:view',\n  GENERATE_REPORTS: 'performance:generate_report',\n  VIEW_SETTINGS: 'settings:view',\n} as const;\n\nexport type Permission = (typeof APP_PERMISSIONS)[keyof typeof APP_PERMISSIONS];\n\n// Asigna permisos iniciales a cada rol. Esta será la configuración por defecto.\nexport const ROLE_PERMISSIONS: Record<Role, Permission[]> = {\n  [ROLES.IT]: Object.values(APP_PERMISSIONS), // TI tiene todos los permisos\n  [ROLES.MARKETING]: [\n    APP_PERMISSIONS.VIEW_DASHBOARD,\n    APP_PERMISSIONS.SEND_CAMPAIGN,\n    APP_PERMISSIONS.VIEW_CAMPAIGN_MONITOR,\n    APP_PERMISSIONS.VIEW_MAILBOX,\n    APP_PERMISSIONS.VIEW_CONTACTS,\n    APP_PERMISSIONS.VIEW_TEMPLATES,\n    APP_PERMISSIONS.VIEW_SURVEYS,\n    APP_PERMISSIONS.VIEW_PERFORMANCE,\n  ],\n  [ROLES.HR]: [\n    APP_PERMISSIONS.VIEW_DASHBOARD,\n    APP_PERMISSIONS.SEND_CAMPAIGN,\n    APP_PERMISSIONS.VIEW_CAMPAIGN_MONITOR,\n    APP_PERMISSIONS.VIEW_MAILBOX,\n    APP_PERMISSIONS.VIEW_CONTACTS,\n    APP_PERMISSIONS.VIEW_EVENTS,\n  ],\n};\n\n/**\n * Comprueba si un rol tiene un permiso específico.\n * @param role El rol del usuario.\n * @param permission El permiso a comprobar.\n * @returns `true` si el rol tiene el permiso, `false` en caso contrario.\n */\nexport function hasPermission(role: Role | null, permission: Permission): boolean {\n  if (!role) return false;\n  // En una implementación real y dinámica, ROLE_PERMISSIONS se obtendría\n  // de un estado global o contexto que el admin de TI puede modificar.\n  // Por ahora, usamos la configuración estática.\n  return ROLE_PERMISSIONS[role]?.includes(permission) || false;\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;AAEM,MAAM,QAAQ;IACnB,IAAI;IACJ,WAAW;IACX,IAAI;AACN;AAKO,MAAM,kBAAkB;IAC7B,UAAU;IACV,gBAAgB;IAChB,QAAQ;IACR,eAAe;IACf,uBAAuB;IACvB,cAAc;IACd,UAAU;IACV,eAAe;IACf,gBAAgB;IAChB,aAAa;IACb,cAAc;IACd,WAAW;IACX,kBAAkB;IAClB,kBAAkB;IAClB,eAAe;AACjB;AAKO,MAAM,mBAA+C;IAC1D,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,MAAM,CAAC;IAC1B,CAAC,MAAM,SAAS,CAAC,EAAE;QACjB,gBAAgB,cAAc;QAC9B,gBAAgB,aAAa;QAC7B,gBAAgB,qBAAqB;QACrC,gBAAgB,YAAY;QAC5B,gBAAgB,aAAa;QAC7B,gBAAgB,cAAc;QAC9B,gBAAgB,YAAY;QAC5B,gBAAgB,gBAAgB;KACjC;IACD,CAAC,MAAM,EAAE,CAAC,EAAE;QACV,gBAAgB,cAAc;QAC9B,gBAAgB,aAAa;QAC7B,gBAAgB,qBAAqB;QACrC,gBAAgB,YAAY;QAC5B,gBAAgB,aAAa;QAC7B,gBAAgB,WAAW;KAC5B;AACH;AAQO,SAAS,cAAc,IAAiB,EAAE,UAAsB;IACrE,IAAI,CAAC,MAAM,OAAO;IAClB,uEAAuE;IACvE,qEAAqE;IACrE,+CAA+C;IAC/C,OAAO,gBAAgB,CAAC,KAAK,EAAE,SAAS,eAAe;AACzD","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/optimize-email-action.ts"],"sourcesContent":["'use server';\n\nimport {\n  optimizeEmailContent,\n  type OptimizeEmailContentInput,\n  type OptimizeEmailContentOutput,\n} from '@/ai/flows/optimize-email-content';\nimport { hasPermission, APP_PERMISSIONS, type Role } from '@/lib/permissions';\n\n\ninterface OptimizeEmailContentInputWithRole extends OptimizeEmailContentInput {\n  role: Role;\n}\n\n/**\n * Acción de servidor para optimizar el contenido de un correo electrónico utilizando un flujo de IA.\n * Incluye verificación de permisos basada en rol.\n * @param input - El contenido del correo, la descripción de la audiencia y el rol del usuario.\n * @returns Una promesa que se resuelve con el contenido del correo optimizado.\n * @throws Arrojará un error si la optimización falla o el usuario no tiene permisos.\n */\nexport async function optimizeEmailContentAction(\n  input: OptimizeEmailContentInputWithRole\n): Promise<OptimizeEmailContentOutput> {\n  const { role, ...optimizeInput } = input;\n\n  if (!hasPermission(role, APP_PERMISSIONS.SEND_CAMPAIGN)) {\n    throw new Error('Acceso denegado: No tienes permiso para optimizar contenido.');\n  }\n\n  try {\n    const result = await optimizeEmailContent(optimizeInput);\n    return result;\n  } catch (error) {\n    console.error('Error optimizing email content:', error);\n    throw new Error('No se pudo optimizar el contenido del correo electrónico.');\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;AAKA;;;;;;AAcO,eAAe,2BACpB,KAAwC;IAExC,MAAM,EAAE,IAAI,EAAE,GAAG,eAAe,GAAG;IAEnC,IAAI,CAAC,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,yHAAA,CAAA,kBAAe,CAAC,aAAa,GAAG;QACvD,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,kJAAA,CAAA,uBAAoB,AAAD,EAAE;QAC1C,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,MAAM,IAAI,MAAM;IAClB;AACF;;;IAhBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28main%29/templates/editor/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {optimizeEmailContentAction as '408eb00f3d55a667ab96280ee5276ee768efedb92d'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/template-editor-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TemplateEditorClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call TemplateEditorClient() from the server but TemplateEditorClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/template-editor-client.tsx <module evaluation>\",\n    \"TemplateEditorClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,2EACA","debugId":null}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/template-editor-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TemplateEditorClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call TemplateEditorClient() from the server but TemplateEditorClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/template-editor-client.tsx\",\n    \"TemplateEditorClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,uDACA","debugId":null}},
    {"offset": {"line": 498, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/templates/editor/page.tsx"],"sourcesContent":["import { TemplateEditorClient } from \"@/components/template-editor-client\";\n\n/**\n * Página del Editor de Plantillas.\n * Contiene el componente cliente que gestiona la lógica de creación\n * y edición de plantillas de correo.\n */\nexport default function TemplateEditorPage() {\n  return (\n    <div>\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-headline font-bold\">Editor de Plantillas</h1>\n        <p className=\"text-muted-foreground\">\n          Diseña correos electrónicos atractivos y optimízalos con IA.\n        </p>\n      </div>\n      <TemplateEditorClient />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAOe,SAAS;IACtB,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;0BAIvC,8OAAC,kJAAA,CAAA,uBAAoB;;;;;;;;;;;AAG3B","debugId":null}}]
}