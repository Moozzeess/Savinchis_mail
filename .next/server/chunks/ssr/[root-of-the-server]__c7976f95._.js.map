{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["\n/**\n * @fileoverview Componente de UI \"Card\" (Tarjeta).\n * Proporciona un contenedor estilizado para agrupar contenido relacionado,\n * con secciones para encabezado, contenido y pie de página.\n *\n * @see https://ui.shadcn.com/docs/components/card\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Componente principal de la tarjeta, actúa como contenedor.\n */\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n/**\n * Sección de encabezado de la tarjeta.\n */\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n/**\n * Componente para el título dentro de CardHeader.\n */\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n/**\n * Componente para la descripción dentro de CardHeader.\n */\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n/**\n * Sección de contenido principal de la tarjeta.\n */\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n/**\n * Sección de pie de página de la tarjeta.\n */\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":"AACA;;;;;;CAMC;;;;;;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB;;CAEC,GACD,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB;;CAEC,GACD,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["\n/**\n * @fileoverview Componente de UI \"Textarea\".\n * Proporciona un campo de entrada de texto de varias líneas.\n *\n * @see https://ui.shadcn.com/docs/components/textarea\n */\nimport * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\n/**\n * Componente Textarea para entrada de texto largo.\n */\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":"AACA;;;;;CAKC;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\n/**\n * @fileoverview Componente de UI \"Label\" (Etiqueta).\n * Muestra una etiqueta para un campo de formulario.\n *\n * @see https://ui.shadcn.com/docs/components/label\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\n/**\n * Componente Label que se asocia con un campo de entrada.\n */\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":"AACA;;;;;CAKC;;;;AAGD;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF;;CAEC,GACD,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\n/**\n * @fileoverview Componentes para construir formularios con validación.\n * Integra `react-hook-form` con los componentes de UI de `shadcn/ui` para crear\n * formularios robustos y accesibles con manejo de estado y validación.\n *\n * @see https://ui.shadcn.com/docs/components/form\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\n/**\n * Proveedor de contexto del formulario, basado en react-hook-form.\n */\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\n/**\n * Componente que conecta un campo de entrada a react-hook-form.\n */\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\n/**\n * Hook personalizado para acceder al estado de un campo de formulario.\n */\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\n/**\n * Contenedor para un campo de formulario, incluyendo etiqueta, entrada y mensajes.\n */\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\n/**\n * Etiqueta para un campo de formulario.\n */\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\n/**\n * Contenedor para el componente de entrada (input, select, etc.).\n */\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\n/**\n * Descripción o texto de ayuda para un campo de formulario.\n */\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\n/**\n * Mensaje de error o de estado para un campo de formulario.\n */\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"AACA;;;;;;CAMC;;;;;;;;;;;AAGD;AAEA;AACA;AASA;AACA;AAfA;;;;;;;AAiBA;;CAEC,GACD,MAAM,OAAO,8JAAA,CAAA,eAAY;AASzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EACzC,CAAC;AAGH;;CAEC,GACD,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,8OAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,8OAAC,8JAAA,CAAA,aAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;AAEA;;CAEC,GACD,MAAM,eAAe;IACnB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IAElD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;AAMA,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EACxC,CAAC;AAGH;;CAEC,GACD,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,KAAK,CAAA,GAAA,qMAAA,CAAA,QAAW,AAAD;IAErB,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,8OAAC;YAAI,KAAK;YAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;YAAa,GAAG,KAAK;;;;;;;;;;;AAGrE;AACA,SAAS,WAAW,GAAG;AAEvB;;CAEC,GACD,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,8OAAC,iIAAA,CAAA,QAAK;QACJ,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,SAAS,oBAAoB;QAC3C,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;AACA,UAAU,WAAW,GAAG;AAExB;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,GAAG,OAAO,EAAE;IACf,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,8OAAC,gKAAA,CAAA,OAAI;QACH,KAAK;QACL,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;AACA,YAAY,WAAW,GAAG;AAE1B;;CAEC,GACD,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,8OAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AACA,gBAAgB,WAAW,GAAG;AAE9B;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACpC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM;IAEpD,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP;AACA,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/template-editor-client.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useForm, useFieldArray } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useToast } from '@/hooks/use-toast';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Minus, Sparkles, Trash2, GripVertical, Image as ImageIcon, Pilcrow } from 'lucide-react';\nimport { DragDropContext, Droppable, Draggable, type DropResult } from 'react-beautiful-dnd';\nimport { nanoid } from 'nanoid';\nimport { cn } from '@/lib/utils';\n\n// Definición de los esquemas para cada tipo de bloque\nconst textBlockSchema = z.object({\n  text: z.string().min(1, 'El texto no puede estar vacío.'),\n});\n\nconst imageBlockSchema = z.object({\n  src: z.string().url('Debe ser una URL válida.'),\n  alt: z.string().optional(),\n});\n\nconst buttonBlockSchema = z.object({\n  text: z.string().min(1, 'El texto del botón es requerido.'),\n  href: z.string().url('Debe ser una URL válida.'),\n});\n\nconst spacerBlockSchema = z.object({\n  height: z.number().min(10, 'La altura mínima es 10px.').max(200, 'La altura máxima es 200px.'),\n});\n\n// Esquema principal para un bloque, usando `discriminatedUnion`\nconst blockSchema = z.discriminatedUnion('type', [\n  z.object({ id: z.string(), type: z.literal('text'), content: textBlockSchema }),\n  z.object({ id: z.string(), type: z.literal('image'), content: imageBlockSchema }),\n  z.object({ id: z.string(), type: z.literal('button'), content: buttonBlockSchema }),\n  z.object({ id: z.string(), type: z.literal('spacer'), content: spacerBlockSchema }),\n]);\n\ntype Block = z.infer<typeof blockSchema>;\n\n// Esquema de validación para el formulario completo\nconst formSchema = z.object({\n  templateName: z.string().min(1, 'El nombre de la plantilla es requerido.'),\n  emailSubject: z.string().min(1, 'El asunto del correo es requerido.'),\n  blocks: z.array(blockSchema).min(1, 'El cuerpo del correo debe tener al menos un bloque.'),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\n// Función para generar HTML a partir de los bloques\nfunction generateHtmlFromBlocks(blocks: Block[]): string {\n    const content = blocks.map(block => {\n        switch (block.type) {\n            case 'text':\n                return `<tr><td style=\"padding: 10px 20px; font-family: Arial, sans-serif; font-size: 16px; line-height: 1.6;\">${block.content.text.replace(/\\n/g, '<br>')}</td></tr>`;\n            case 'image':\n                return `<tr><td style=\"padding: 10px 20px; text-align: center;\"><img src=\"${block.content.src}\" alt=\"${block.content.alt || ''}\" style=\"max-width: 100%; height: auto; border: 0;\" /></td></tr>`;\n            case 'button':\n                return `<tr><td style=\"padding: 20px;\" align=\"center\"><a href=\"${block.content.href}\" target=\"_blank\" style=\"background-color: #74B49B; color: #ffffff; padding: 12px 25px; text-decoration: none; border-radius: 5px; font-family: Arial, sans-serif; font-size: 16px; font-weight: bold; display: inline-block;\">${block.content.text}</a></td></tr>`;\n            case 'spacer':\n                return `<tr><td style=\"height: ${block.content.height}px; line-height: ${block.content.height}px; font-size: ${block.content.height}px;\">&nbsp;</td></tr>`;\n            default:\n                return '';\n        }\n    }).join('');\n\n    return `\n    <!DOCTYPE html>\n    <html>\n    <head><title>${'Email Preview'}</title></head>\n    <body style=\"margin: 0; padding: 0; background-color: #E2F9F0;\">\n      <table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n        <tr>\n          <td align=\"center\" style=\"padding: 20px;\">\n            <table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"600\" style=\"background-color: #ffffff; border-radius: 8px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);\">\n              ${content}\n            </table>\n          </td>\n        </tr>\n      </table>\n    </body>\n    </html>\n  `;\n}\n\n/**\n * Componente de cliente para crear y editar plantillas de correo electrónico con un editor visual por bloques.\n */\nexport function TemplateEditorClient() {\n  const [previewHtml, setPreviewHtml] = useState('');\n  const { toast } = useToast();\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      templateName: '',\n      emailSubject: '',\n      blocks: [],\n    },\n  });\n\n  const { fields, append, remove, move } = useFieldArray({\n    control: form.control,\n    name: 'blocks',\n  });\n\n  const watchedBlocks = form.watch('blocks');\n\n  useEffect(() => {\n    const html = generateHtmlFromBlocks(watchedBlocks);\n    setPreviewHtml(html);\n  }, [watchedBlocks]);\n\n  function onSubmit(values: FormValues) {\n    const finalHtml = generateHtmlFromBlocks(values.blocks);\n    console.log({ ...values, emailBody: finalHtml });\n    toast({\n      title: 'Plantilla guardada',\n      description: `La plantilla \"${values.templateName}\" ha sido guardada con éxito.`,\n    });\n  }\n  \n  const addBlock = (type: Block['type']) => {\n    let newBlock: Block;\n    const id = nanoid();\n    switch (type) {\n      case 'text':\n        newBlock = { id, type, content: { text: 'Escribe tu texto aquí...' } };\n        break;\n      case 'image':\n        newBlock = { id, type, content: { src: 'https://placehold.co/600x300.png', alt: 'Imagen descriptiva' } };\n        break;\n      case 'button':\n        newBlock = { id, type, content: { text: 'Haz Clic Aquí', href: 'https://example.com' } };\n        break;\n      case 'spacer':\n        newBlock = { id, type, content: { height: 30 } };\n        break;\n      default:\n        return;\n    }\n    append(newBlock);\n  };\n  \n  const onDragEnd = (result: DropResult) => {\n    if (!result.destination) return;\n    move(result.source.index, result.destination.index);\n  };\n\n  const renderBlockControls = (index: number) => {\n    const block = watchedBlocks[index];\n    switch (block.type) {\n      case 'text':\n        return <FormField control={form.control} name={`blocks.${index}.content.text`} render={({ field }) => <Textarea {...field} rows={4} />} />;\n      case 'image':\n        return <div className=\"space-y-2\">\n            <FormField control={form.control} name={`blocks.${index}.content.src`} render={({ field }) => <Input {...field} placeholder=\"URL de la imagen\" />} />\n            <FormField control={form.control} name={`blocks.${index}.content.alt`} render={({ field }) => <Input {...field} placeholder=\"Texto alternativo\" />} />\n        </div>;\n      case 'button':\n        return <div className=\"space-y-2\">\n            <FormField control={form.control} name={`blocks.${index}.content.text`} render={({ field }) => <Input {...field} placeholder=\"Texto del botón\" />} />\n            <FormField control={form.control} name={`blocks.${index}.content.href`} render={({ field }) => <Input {...field} placeholder=\"URL del enlace\" />} />\n        </div>;\n      case 'spacer':\n        return <FormField control={form.control} name={`blocks.${index}.content.height`} render={({ field }) => <div className=\"flex items-center gap-2\"><Input type=\"number\" {...field} onChange={e => field.onChange(parseInt(e.target.value, 10))}/><span>px</span></div>} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <div className=\"grid lg:grid-cols-2 gap-8 items-start\">\n            {/* Columna del Editor */}\n            <div className=\"space-y-6\">\n                 <Card>\n                    <CardHeader>\n                        <CardTitle className=\"font-headline\">Editor de Plantilla</CardTitle>\n                        <CardDescription>Crea o edita tu plantilla de correo electrónico.</CardDescription>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                        <FormField control={form.control} name=\"templateName\" render={({ field }) => (<FormItem><FormLabel>Nombre de la Plantilla</FormLabel><FormControl><Input placeholder=\"Ej: Newsletter Mensual\" {...field} /></FormControl><FormMessage /></FormItem>)} />\n                        <FormField control={form.control} name=\"emailSubject\" render={({ field }) => (<FormItem><FormLabel>Asunto del Correo</FormLabel><FormControl><Input placeholder=\"Ej: Novedades de este mes\" {...field} /></FormControl><FormMessage /></FormItem>)} />\n                    </CardContent>\n                 </Card>\n\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Contenido del Correo</CardTitle>\n                        <CardDescription>Añade y organiza los bloques de contenido de tu correo.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <DragDropContext onDragEnd={onDragEnd}>\n                            <Droppable droppableId=\"blocks\">\n                                {(provided) => (\n                                    <div {...provided.droppableProps} ref={provided.innerRef} className=\"space-y-4\">\n                                        {fields.map((field, index) => (\n                                            <Draggable key={field.id} draggableId={field.id} index={index}>\n                                                {(provided, snapshot) => (\n                                                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className={cn(\"p-4 border rounded-lg bg-background\", snapshot.isDragging && \"shadow-lg\")}>\n                                                        <div className=\"flex items-start gap-2\">\n                                                            <GripVertical className=\"h-5 w-5 text-muted-foreground mt-1 cursor-move\" />\n                                                            <div className=\"flex-grow space-y-2\">\n                                                                <h4 className=\"font-medium capitalize\">{watchedBlocks[index].type}</h4>\n                                                                {renderBlockControls(index)}\n                                                            </div>\n                                                            <Button type=\"button\" variant=\"ghost\" size=\"icon\" onClick={() => remove(index)}>\n                                                                <Trash2 className=\"h-4 w-4\" />\n                                                            </Button>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                            </Draggable>\n                                        ))}\n                                        {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n                        </DragDropContext>\n                         <div className=\"pt-4 mt-4 border-t\">\n                            <div className=\"grid grid-cols-2 gap-2\">\n                                <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={() => addBlock('text')}><Pilcrow className=\"mr-2 h-4 w-4\"/>Añadir Texto</Button>\n                                <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={() => addBlock('image')}><ImageIcon className=\"mr-2 h-4 w-4\"/>Añadir Imagen</Button>\n                                <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={() => addBlock('button')}><Sparkles className=\"mr-2 h-4 w-4\"/>Añadir Botón</Button>\n                                <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={() => addBlock('spacer')}><Minus className=\"mr-2 h-4 w-4\"/>Añadir Espaciador</Button>\n                            </div>\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n\n            {/* Columna de la Vista Previa */}\n            <div className=\"sticky top-24 space-y-6\">\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Vista Previa</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"w-full h-[800px] border rounded-md overflow-hidden\">\n                            <iframe srcDoc={previewHtml} title=\"Vista previa del correo\" className=\"w-full h-full border-0\" sandbox=\"allow-scripts\" />\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n        </div>\n\n        <Button type=\"submit\" size=\"lg\" className=\"w-full\">Guardar Plantilla</Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}